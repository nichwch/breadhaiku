{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\charg\\\\Documents\\\\degenerate\\\\intergrate\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\charg\\\\Documents\\\\degenerate\\\\intergrate\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\charg\\\\Documents\\\\degenerate\\\\intergrate\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\charg\\\\Documents\\\\degenerate\\\\intergrate\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\charg\\\\Documents\\\\degenerate\\\\intergrate\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\charg\\\\Documents\\\\degenerate\\\\intergrate\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\charg\\\\Documents\\\\degenerate\\\\intergrate\\\\client\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport dragon from './dragon.png';\nimport warrior from './breadwarrior.png';\nimport './App.css'; //verify that submitted poem fits profile of a haiku, and includes a word related to bread\n\nfunction verifyHaiku(haiku) {\n  var syllable = require('syllable');\n\n  var syllable1 = syllable(haiku.line1) == 5;\n  var syllable2 = syllable(haiku.line2) == 7;\n  var syllable3 = syllable(haiku.line3) == 5;\n  var bread1 = haiku.line1.includes(\"bread\");\n  var bread2 = haiku.line2.includes(\"bread\");\n  var bread3 = haiku.line3.includes(\"bread\");\n  var max1 = haiku.line1.length < 300;\n  var max2 = haiku.line2.length < 300;\n  var max3 = haiku.line3.length < 300;\n  var containsBread = haiku.line1.includes(\"bread\") || haiku.line2.includes(\"bread\") || haiku.line3.includes(\"bread\");\n\n  if ((bread1 || bread2 || bread3) && syllable1 && syllable2 && syllable3 && max1 && max2 && max3) {\n    return {\n      success: true,\n      bread: containsBread,\n      line1: syllable(haiku.line1),\n      line2: syllable(haiku.line2),\n      line3: syllable(haiku.line3)\n    };\n  }\n\n  return {\n    success: false,\n    bread: containsBread,\n    line1: syllable(haiku.line1),\n    line2: syllable(haiku.line2),\n    line3: syllable(haiku.line3)\n  };\n}\n\nfunction Title(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"breadhaiku\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Buttons, {\n    writing: props.writing,\n    switch: props.switch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })));\n}\n\nfunction Buttons(props) {\n  //if app is in browse mode, show the write button\n  if (props.writing == false) {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"browse\"), React.createElement(\"button\", {\n      onClick: props.switch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"//write\"));\n  } //if app is in writing mode, show the browse button\n  else {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: props.switch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"browse\"), React.createElement(\"p\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"//write\"));\n    }\n}\n\nvar InputField =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputField, _Component);\n\n  function InputField() {\n    var _this;\n\n    _classCallCheck(this, InputField);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputField).call(this));\n    _this.state = {\n      input1: \"\",\n      input2: \"\",\n      input3: \"\",\n      input4: \"\",\n      writtenpoem: {\n        line1: \"a\",\n        line2: \"a\",\n        line3: \"a\",\n        author: \"a\"\n      }\n    };\n    _this.handleChange1 = _this.handleChange1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange2 = _this.handleChange2.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange3 = _this.handleChange3.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange4 = _this.handleChange4.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitChange = _this.submitChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(InputField, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.writing == false) {\n        return null;\n      } else if (this.props.writing == true) {\n        var errorMessage = \"\";\n\n        if (this.props.validHaiku == false) {\n          var errorParameters = verifyHaiku({\n            line1: this.state.input1,\n            line2: this.state.input2,\n            line3: this.state.input3,\n            author: this.state.input4\n          });\n          errorMessage = React.createElement(\"div\", {\n            className: \"error\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, errorParameters.bread ? \"\" : \"Your poem does not mention bread...\"), errorParameters.line1 == 5 && errorParameters.line2 == 7 && errorParameters.line3 == 5 ? \"\" : React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, \"Your first line has \", errorParameters.line1, \" syllables.\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \"Your second line has \", errorParameters.line2, \" syllables.\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"Your third line has \", errorParameters.line3, \" syllables.\")), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, \"Your poem must contain the word bread, and follow the form of a haiku. The first and last lines of a Haiku have 5 syllables and the middle line has 7 syllables.\"));\n        }\n\n        if (this.props.haikuSub == false) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, React.createElement(\"form\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            onChange: this.handleChange1,\n            value: this.state.message,\n            placeholder: \"line 1 (5 syllables)\",\n            type: \"text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }), React.createElement(\"input\", {\n            onChange: this.handleChange2,\n            value: this.state.message,\n            placeholder: \"line 2 (7 syllables)\",\n            type: \"text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }), React.createElement(\"input\", {\n            onChange: this.handleChange3,\n            value: this.state.message,\n            placeholder: \"line 3 (5 syllables)\",\n            type: \"text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }), React.createElement(\"input\", {\n            onChange: this.handleChange4,\n            value: this.state.message,\n            placeholder: \"your name\",\n            type: \"text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          })), React.createElement(\"button\", {\n            onClick: this.submitChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, \"submit\"), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, errorMessage));\n        } else {\n          return React.createElement(ThankYou, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleChange1\",\n    value: function handleChange1(event) {\n      this.setState({\n        input1: event.target.value\n      });\n      this.props.resetErr();\n    }\n  }, {\n    key: \"handleChange2\",\n    value: function handleChange2(event) {\n      this.setState({\n        input2: event.target.value\n      });\n      this.props.resetErr();\n    }\n  }, {\n    key: \"handleChange3\",\n    value: function handleChange3(event) {\n      this.setState({\n        input3: event.target.value\n      });\n      this.props.resetErr();\n    }\n  }, {\n    key: \"handleChange4\",\n    value: function handleChange4(event) {\n      this.setState({\n        input4: event.target.value\n      });\n      this.props.resetErr();\n    }\n  }, {\n    key: \"submitChange\",\n    value: function submitChange() {\n      if (verifyHaiku({\n        line1: this.state.input1,\n        line2: this.state.input2,\n        line3: this.state.input3,\n        author: this.state.input4\n      }).success) {\n        this.props.submit({\n          line1: this.state.input1,\n          line2: this.state.input2,\n          line3: this.state.input3,\n          author: this.state.input4\n        });\n        this.setState({\n          input1: \"\",\n          input2: \"\",\n          input3: \"\",\n          input4: \"\"\n        });\n      } else {\n        this.props.setErr();\n      }\n    }\n  }]);\n\n  return InputField;\n}(Component);\n\nfunction ThankYou(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"Let's get this bread! Your poem has been submitted.\"));\n}\n\nfunction Feed(props) {\n  if (props.writing == false) {\n    var poems = props.poemList.map(function (currentpoem) {\n      return React.createElement(Poem, {\n        poem: currentpoem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, poems);\n  }\n\n  return null;\n}\n\nfunction Poem(props) {\n  return React.createElement(\"div\", {\n    className: \"poemBlock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    key: props.poem.line1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, props.poem.line1), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, props.poem.line2), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, props.poem.line3), React.createElement(\"p\", {\n    className: \"authorSign\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Written by \", props.poem.author)));\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(App, _Component2);\n\n  function App() {\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this2.switchMode = _this2.switchMode.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.state = {\n      writing: true,\n      error: false,\n      haikuSubmitted: false,\n      poemList: [\n        /*\n        {\n          line1:\"i like to eat bread\",\n          line2:\"bread is very good and nice\",\n          line3:\"i am happy boy\",\n          author:\"nick\",\n        },\n        {\n          line1:\"let us get this bread\",\n          line2:\"we will accomplish our goals\",\n          line3:\"to the moon with us\",\n          author:\"nick\",\n        },\n        {\n          line1:\"bread bread bread bread bread\",\n          line2:\"bread bread bread bread bread bread bread\",\n          line3:\"bread bread bread bread bread\",\n          author:\"nick\",\n        },\n        */\n      ]\n    };\n    _this2.submitHaiku = _this2.submitHaiku.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.setError = _this2.setError.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.resetError = _this2.resetError.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      fetch('http://localhost:5000/haikus', {\n        mode: 'no-cors'\n      }).then(function (response) {\n        _this3.setState({\n          poemList: response\n        });\n\n        console.log(_this3.state.poemList);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Title, {\n        writing: this.state.writing,\n        switch: this.switchMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        writing: this.state.writing,\n        submit: this.submitHaiku,\n        haikuSub: this.state.haikuSubmitted,\n        setErr: this.setError,\n        resetErr: this.resetError,\n        validHaiku: !this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), React.createElement(Feed, {\n        writing: this.state.writing,\n        poemList: this.state.poemList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"submitHaiku\",\n    value: function submitHaiku(newHaiku) {\n      newHaiku = [newHaiku];\n      var newPoemList = newHaiku.concat(this.state.poemList);\n      this.setState({\n        poemList: newPoemList\n      });\n      this.setState({\n        haikuSubmitted: true\n      });\n    }\n  }, {\n    key: \"setError\",\n    value: function setError() {\n      this.setState({\n        error: true\n      });\n    }\n  }, {\n    key: \"resetError\",\n    value: function resetError() {\n      this.setState({\n        error: false\n      });\n    }\n  }, {\n    key: \"switchMode\",\n    value: function switchMode() {\n      this.setState({\n        error: false\n      });\n\n      if (this.state.writing == false) {\n        this.setState({\n          writing: true\n        });\n        this.setState({\n          haikuSubmitted: false\n        });\n      } else {\n        this.setState({\n          writing: false\n        });\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 337\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\Users\\charg\\Documents\\degenerate\\intergrate\\client\\src\\index.js"],"names":["React","Component","ReactDOM","dragon","warrior","verifyHaiku","haiku","syllable","require","syllable1","line1","syllable2","line2","syllable3","line3","bread1","includes","bread2","bread3","max1","length","max2","max3","containsBread","success","bread","Title","props","writing","switch","Buttons","InputField","state","input1","input2","input3","input4","writtenpoem","author","handleChange1","bind","handleChange2","handleChange3","handleChange4","submitChange","errorMessage","validHaiku","errorParameters","haikuSub","message","event","setState","target","value","resetErr","submit","setErr","ThankYou","Feed","poems","poemList","map","currentpoem","Poem","poem","App","switchMode","error","haikuSubmitted","submitHaiku","setError","resetError","fetch","mode","then","response","console","log","newHaiku","newPoemList","concat","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport dragon from './dragon.png';\nimport warrior from './breadwarrior.png';\nimport './App.css';\n\n//verify that submitted poem fits profile of a haiku, and includes a word related to bread\nfunction verifyHaiku(haiku)\n{\n  let syllable = require('syllable')\n  let syllable1 = (syllable(haiku.line1)==5);\n  let syllable2 = (syllable(haiku.line2)==7);\n  let syllable3 = (syllable(haiku.line3)==5);\n\n  let bread1 = haiku.line1.includes(\"bread\");\n  let bread2 = haiku.line2.includes(\"bread\");\n  let bread3 = haiku.line3.includes(\"bread\");\n\n  let max1 = haiku.line1.length < 300;\n  let max2 = haiku.line2.length < 300;\n  let max3 = haiku.line3.length < 300;\n  let containsBread = (haiku.line1.includes(\"bread\")||haiku.line2.includes(\"bread\")||haiku.line3.includes(\"bread\"));\n\n  if((bread1||bread2||bread3)&&syllable1&&syllable2&&syllable3&&max1&&max2&&max3)\n  {\n    return {success: true,\n            bread: containsBread,\n            line1:syllable(haiku.line1),\n            line2:syllable(haiku.line2),\n            line3:syllable(haiku.line3)};\n  }\n  return {success: false,\n          bread: containsBread,\n          line1:syllable(haiku.line1),\n          line2:syllable(haiku.line2),\n          line3:syllable(haiku.line3)};\n}\n\nfunction Title(props) {\n  return (<div>\n            <h1>breadhaiku</h1>\n            <span><Buttons writing = {props.writing}\n                           switch = {props.switch}/></span>\n          </div>\n  )\n\n}\n\nfunction Buttons(props){\n  //if app is in browse mode, show the write button\n  if(props.writing == false)\n  {\n    return(\n      <span>\n      <p className = \"inline\">\n        browse\n      </p>\n      <button onClick = {props.switch}>\n        //write\n      </button>\n      </span>\n    )\n  }\n  //if app is in writing mode, show the browse button\n  else{\n    return(\n      <span>\n      <button onClick = {props.switch}>\n        browse\n      </button>\n      <p className = \"inline\">\n        //write\n      </p>\n      </span>\n    )\n  }\n}\n\nclass InputField extends Component {\n  constructor()\n  {\n    super();\n    this.state = {\n      input1:\"\",\n      input2:\"\",\n      input3:\"\",\n      input4:\"\",\n      writtenpoem:{\n        line1:\"a\",\n        line2:\"a\",\n        line3:\"a\",\n        author:\"a\",\n      }\n    }\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleChange3 = this.handleChange3.bind(this);\n    this.handleChange4 = this.handleChange4.bind(this);\n    this.submitChange = this.submitChange.bind(this);\n  }\n\n  render() {\n    if(this.props.writing == false)\n    {\n      return null;\n    }\n    else if (this.props.writing == true){\n      let errorMessage = \"\";\n      if(this.props.validHaiku == false)\n      {\n        let errorParameters = verifyHaiku({\n          line1: this.state.input1,\n          line2: this.state.input2,\n          line3: this.state.input3,\n          author: this.state.input4,\n        });\n        errorMessage = (<div className = \"error\">\n                          <br></br>\n                          <p>{errorParameters.bread ? \"\":\"Your poem does not mention bread...\"}</p>\n                          {errorParameters.line1==5&&errorParameters.line2==7&&errorParameters.line3==5 ?\n                          \"\":\n                          <div>\n                          <p>Your first line has {errorParameters.line1} syllables.</p>\n                          <p>Your second line has {errorParameters.line2} syllables.</p>\n                          <p>Your third line has {errorParameters.line3} syllables.</p>\n                          </div>\n                          }\n                          <br></br>\n                          <p>Your poem must contain the word bread, and follow the form of a haiku.\n                          The first and last lines of a Haiku have 5 syllables and the middle line has 7 syllables.</p>\n\n\n                        </div>\n\n                      );\n      }\n      if(this.props.haikuSub==false)\n      {\n      return (\n      <div>\n      <form>\n        <input\n        onChange={this.handleChange1}\n        value={this.state.message}\n        placeholder=\"line 1 (5 syllables)\"\n        type=\"text\" />\n        <input\n        onChange={this.handleChange2}\n        value={this.state.message}\n        placeholder=\"line 2 (7 syllables)\"\n        type=\"text\" />\n        <input\n        onChange={this.handleChange3}\n        value={this.state.message}\n        placeholder=\"line 3 (5 syllables)\"\n        type=\"text\" />\n        <input\n        onChange={this.handleChange4}\n        value={this.state.message}\n        placeholder=\"your name\"\n        type=\"text\" />\n      </form>\n      <button onClick = {this.submitChange}>\n        submit\n      </button>\n      <div>{errorMessage}</div>\n      </div>)\n    }\n    else{\n      return (<ThankYou/>);\n    }\n    }\n  }\n\n  handleChange1(event){\n    this.setState({input1: event.target.value});\n    this.props.resetErr();\n  }\n  handleChange2(event){\n    this.setState({input2: event.target.value});\n    this.props.resetErr();\n  }\n  handleChange3(event){\n    this.setState({input3: event.target.value});\n    this.props.resetErr();\n  }\n  handleChange4(event){\n    this.setState({input4: event.target.value});\n    this.props.resetErr();\n  }\n  submitChange(){\n    if(verifyHaiku({\n      line1: this.state.input1,\n      line2: this.state.input2,\n      line3: this.state.input3,\n      author: this.state.input4,\n    }).success )\n    {\n      this.props.submit({\n        line1: this.state.input1,\n        line2: this.state.input2,\n        line3: this.state.input3,\n        author: this.state.input4,\n      })\n      this.setState({input1:\"\",\n                     input2:\"\",\n                     input3:\"\",\n                     input4:\"\"})\n      }\n      else{\n\n        this.props.setErr();\n      }\n    }\n  }\n  function ThankYou(props) {\n    return(\n      <div>\n        <p>Let's get this bread! Your poem has been submitted.</p>\n      </div>\n    )\n  }\n  function Feed(props) {\n    if(props.writing == false)\n    {\n      let poems = props.poemList.map(currentpoem => {\n        return <Poem poem = {currentpoem} />\n      })\n      return (<ul>\n        {poems}\n      </ul>)\n    }\n    return null;\n  }\n  function Poem(props) {\n    return (\n      <div className = \"poemBlock\">\n      <li key={props.poem.line1}>\n        <p>{props.poem.line1}</p>\n        <p>{props.poem.line2}</p>\n        <p>{props.poem.line3}</p>\n        <p className = \"authorSign\">Written by {props.poem.author}</p>\n      </li>\n      </div>\n    )\n  }\nclass App extends Component {\n\n\n\n  constructor()\n  {\n    super();\n    this.switchMode = this.switchMode.bind(this);\n    this.state = {\n      writing:true,\n      error:false,\n      haikuSubmitted:false,\n      poemList:[\n        /*\n        {\n          line1:\"i like to eat bread\",\n          line2:\"bread is very good and nice\",\n          line3:\"i am happy boy\",\n          author:\"nick\",\n        },\n        {\n          line1:\"let us get this bread\",\n          line2:\"we will accomplish our goals\",\n          line3:\"to the moon with us\",\n          author:\"nick\",\n        },\n        {\n          line1:\"bread bread bread bread bread\",\n          line2:\"bread bread bread bread bread bread bread\",\n          line3:\"bread bread bread bread bread\",\n          author:\"nick\",\n        },\n        */\n      ]\n    };\n    this.submitHaiku = this.submitHaiku.bind(this);\n    this.setError = this.setError.bind(this);\n    this.resetError = this.resetError.bind(this);\n  }\n\n  componentDidMount() {\n\n    fetch('http://localhost:5000/haikus',{mode:'no-cors'})\n    .then(response => {\n      this.setState({poemList:response});\n      console.log(this.state.poemList);\n    })\n\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Title writing={this.state.writing}\n               switch = {this.switchMode}\n        />\n        <InputField writing={this.state.writing}\n                    submit = {this.submitHaiku}\n                    haikuSub = {this.state.haikuSubmitted}\n                    setErr = {this.setError}\n                    resetErr = {this.resetError}\n                    validHaiku = {!(this.state.error)}/>\n        <Feed writing={this.state.writing}\n              poemList = {this.state.poemList}/>\n      </div>\n    );\n  }\n  submitHaiku(newHaiku) {\n    newHaiku = [newHaiku];\n    let newPoemList = newHaiku.concat(this.state.poemList);\n    this.setState({poemList: newPoemList})\n    this.setState({haikuSubmitted:true});\n  }\n  setError(){\n    this.setState({error:true});\n  }\n  resetError(){\n    this.setState({error:false});\n  }\n  switchMode() {\n    this.setState({error:false});\n    if(this.state.writing == false)\n    {\n      this.setState({writing:true});\n      this.setState({haikuSubmitted:false});\n    }\n    else {\n      this.setState({writing:false});\n    }\n  }\n}\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}